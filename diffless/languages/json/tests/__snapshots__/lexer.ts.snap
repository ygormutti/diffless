// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lexer tokenize should match snapshot 1`] = `
Array [
  Token {
    "content": "{",
    "location": [1:1; 1:2) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "LeftBrace",
  },
  ValuedToken {
    "content": "\\"errors\\"",
    "location": [2:5; 2:13) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "errors",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [2:13; 2:14) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  Token {
    "content": "[",
    "location": [2:15; 2:16) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "LeftBracket",
  },
  Token {
    "content": "{",
    "location": [3:9; 3:10) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "LeftBrace",
  },
  ValuedToken {
    "content": "\\"resource\\"",
    "location": [4:13; 4:23) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "resource",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [4:23; 4:24) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"Issue\\"",
    "location": [4:25; 4:32) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "Issue",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [4:32; 4:33) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"fields\\"",
    "location": [5:13; 5:21) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "fields",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [5:21; 5:22) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  Token {
    "content": "[",
    "location": [5:23; 5:24) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "LeftBracket",
  },
  ValuedToken {
    "content": "\\"title\\"",
    "location": [6:17; 6:24) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "title",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [6:24; 6:25) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"author\\"",
    "location": [7:17; 7:25) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "author",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [7:25; 7:26) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"description\\"",
    "location": [8:17; 8:30) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "description",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [8:30; 8:31) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"field_with_a_really_long_name_even_longer_than_the_others_combined\\"",
    "location": [9:17; 9:85) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "field_with_a_really_long_name_even_longer_than_the_others_combined",
    "valueEquals": [Function],
  },
  Token {
    "content": "]",
    "location": [10:13; 10:14) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "RightBracket",
  },
  Token {
    "content": ",",
    "location": [10:14; 10:15) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"code\\"",
    "location": [11:13; 11:19) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "code",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [11:19; 11:20) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"missing_fields\\"",
    "location": [11:21; 11:37) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "missing_fields",
    "valueEquals": [Function],
  },
  Token {
    "content": "}",
    "location": [12:9; 12:10) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "RightBrace",
  },
  Token {
    "content": ",",
    "location": [12:10; 12:11) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  Token {
    "content": "{",
    "location": [13:9; 13:10) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "LeftBrace",
  },
  ValuedToken {
    "content": "\\"resource\\"",
    "location": [14:13; 14:23) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "resource",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [14:23; 14:24) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"Issue\\"",
    "location": [14:25; 14:32) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "Issue",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [14:32; 14:33) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"field\\"",
    "location": [15:13; 15:20) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "field",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [15:20; 15:21) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"milestone\\"",
    "location": [15:22; 15:33) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "milestone",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [15:33; 15:34) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"code\\"",
    "location": [16:13; 16:19) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "code",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [16:19; 16:20) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"invalid\\"",
    "location": [16:21; 16:30) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "invalid",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [16:30; 16:31) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"value\\"",
    "location": [17:13; 17:20) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "value",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [17:20; 17:21) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "1.0",
    "location": [17:22; 17:25) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Number",
    "value": 1,
    "valueEquals": [Function],
  },
  Token {
    "content": "}",
    "location": [18:9; 18:10) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "RightBrace",
  },
  Token {
    "content": "]",
    "location": [19:5; 19:6) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "RightBracket",
  },
  Token {
    "content": ",",
    "location": [19:6; 19:7) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"message\\"",
    "location": [20:5; 20:14) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "message",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [20:14; 20:15) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"Validation Failed\\"",
    "location": [21:9; 21:28) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "String",
    "value": "Validation Failed",
    "valueEquals": [Function],
  },
  Token {
    "content": "}",
    "location": [22:1; 22:2) @ file://diffless/tests/fixtures/textual_changes/before.json,
    "type": "RightBrace",
  },
]
`;

exports[`lexer tokenize should match snapshot 2`] = `
Array [
  Token {
    "content": "{",
    "location": [1:1; 1:2) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "LeftBrace",
  },
  ValuedToken {
    "content": "\\"errors\\"",
    "location": [2:3; 2:11) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "errors",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [2:11; 2:12) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  Token {
    "content": "[",
    "location": [2:13; 2:14) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "LeftBracket",
  },
  Token {
    "content": "{",
    "location": [3:5; 3:6) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "LeftBrace",
  },
  ValuedToken {
    "content": "\\"resource\\"",
    "location": [4:7; 4:17) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "resource",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [4:17; 4:18) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"Issue\\"",
    "location": [4:19; 4:26) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "Issue",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [4:26; 4:27) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"fields\\"",
    "location": [5:7; 5:15) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "fields",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [5:15; 5:16) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  Token {
    "content": "[",
    "location": [5:17; 5:18) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "LeftBracket",
  },
  ValuedToken {
    "content": "\\"field_with_a_really_long_name_even_longer_than_the_others_combined\\"",
    "location": [6:11; 6:79) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "field_with_a_really_long_name_even_longer_than_the_others_combined",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [6:79; 6:80) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"title\\"",
    "location": [7:11; 7:18) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "title",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [7:18; 7:19) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"description\\"",
    "location": [8:11; 8:24) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "description",
    "valueEquals": [Function],
  },
  Token {
    "content": "]",
    "location": [9:9; 9:10) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "RightBracket",
  },
  Token {
    "content": ",",
    "location": [9:10; 9:11) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"code\\"",
    "location": [10:7; 10:13) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "code",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [10:13; 10:14) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"missing_fields\\"",
    "location": [10:15; 10:31) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "missing_fields",
    "valueEquals": [Function],
  },
  Token {
    "content": "}",
    "location": [11:5; 11:6) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "RightBrace",
  },
  Token {
    "content": ",",
    "location": [11:6; 11:7) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  Token {
    "content": "{",
    "location": [12:5; 12:6) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "LeftBrace",
  },
  ValuedToken {
    "content": "\\"resource\\"",
    "location": [13:7; 13:17) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "resource",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [13:17; 13:18) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"Issue\\"",
    "location": [13:19; 13:26) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "Issue",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [13:26; 13:27) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"field\\"",
    "location": [14:7; 14:14) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "field",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [14:14; 14:15) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"milestone\\"",
    "location": [14:16; 14:27) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "milestone",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [14:27; 14:28) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"code\\"",
    "location": [15:7; 15:13) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "code",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [15:13; 15:14) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"invalid\\"",
    "location": [15:15; 15:24) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "invalid",
    "valueEquals": [Function],
  },
  Token {
    "content": ",",
    "location": [15:24; 15:25) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"value\\"",
    "location": [16:7; 16:14) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "value",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [16:14; 16:15) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "1",
    "location": [16:16; 16:17) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Number",
    "value": 1,
    "valueEquals": [Function],
  },
  Token {
    "content": "}",
    "location": [17:5; 17:6) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "RightBrace",
  },
  Token {
    "content": "]",
    "location": [18:3; 18:4) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "RightBracket",
  },
  Token {
    "content": ",",
    "location": [18:4; 18:5) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Comma",
  },
  ValuedToken {
    "content": "\\"message\\"",
    "location": [19:3; 19:12) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "message",
    "valueEquals": [Function],
  },
  Token {
    "content": ":",
    "location": [19:12; 19:13) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "Semicolon",
  },
  ValuedToken {
    "content": "\\"Validation Failed\\"",
    "location": [19:14; 19:33) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "String",
    "value": "Validation Failed",
    "valueEquals": [Function],
  },
  Token {
    "content": "}",
    "location": [20:1; 20:2) @ file://diffless/tests/fixtures/textual_changes/after.json,
    "type": "RightBrace",
  },
]
`;
